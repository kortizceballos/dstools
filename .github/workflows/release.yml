name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag (e.g., v2.0.0)'
        required: true

jobs:
  release:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Validate tag matches pyproject version
        run: |
          VERSION=$(poetry version -s)
          TAG=${{ github.event.inputs.tag }}
          if [[ "$TAG" != "v$VERSION" ]]; then
            echo "Tag ($TAG) does not match pyproject.toml version ($VERSION)"
            exit 1
          fi

      - name: Install dependencies
        run: poetry install --only main

      - name: Configure Poetry for PyPI
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Build and verify package
        run: |
          poetry build
          pip install --upgrade build twine
          twine check dist/*

      - name: Publish to PyPI
        run: poetry publish --skip-existing

      - name: Push tag to GitHub
        run: |
          git config user.name "Joshua Pritchard"
          git config user.email "joshua.pritchard@csiro.au"
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: Release ${{ github.event.inputs.tag }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
